Configuration Management 

	It is all about bringing in consistency in the infrastructure.
	Ensures that the current design of the system, state and environment is known, trusted and agreed upon by everyone.
	It helps record all the challenges made in the system.
	Configuration management tools provide an easier approach to manage and configure the server.
	Writing individual scripts for servers time and again just to get a few things done has become obsolete.
	It enables users to manage and configure the entire infrastructure. 

Infrastructure as Code (IaC)

	IaC enable automation of IT operation (build, deploy, manage) by provisioning of code, rather than manually handling each phase for different environments. 
	It bridges the environment differences system admins encountered every time they had to either deploy new code or setup new server.
	Provisioning server using infrastructure code is easier than writing shell scripts.
	Shell scripts require workflow definition whereas CM tool scripts have pre-defined workflow. 
	IaC works two ways – 
1.	The imperative approach “gives order”. It defines a sequence of command or instruction so the infrastructure can reach the result. Ex. CHEF. 
2.	A declarative approach, on the hand “declares” the desired outcome, instead of explicitly outlining the sequence of steps the infrastructure needs to reach
    the result, the declarative approach shows what the result looks like. Ex. Ansible.  
	
	
Ansible:

  1. ansible is a deployment automation tool which tradionally uses push approach to achieve its objective, by managing all the server through one
     single machine running.
  2. ansible client do not have any agent installed on them.
  3. push approach: push approach does not require agent setup on  individual nodes like pull does.
  4. pull works in a master slave architecture which requires agents setup on all slave nodes.
  


