Loops:
  
    1. Loops are useful in executing a repeating task
    2. Loops removes the need of creating multiple plays/tasks for a duplicated task.
    3. For example, loops can be used to:
        A. create multiple owners
        B. change ownership of multiple files


loop vs with_*

    1. the loop keyword was added in ansible 2.5
    2. the with keyword relies upon the use lookup plugin
    3. string can not be passed as input to the loop keyword
    4. the loop keyword is similar in functionality to with_list keyword. 
	
=======================================================================================================================
SYNTAX:

# To create a standard loop of a simple list
# the list can be defined directly in the task
- name: stopping server services
  services: 
   name: "{{ item }}"
   state: stopped
   loop: 
     - httpd
     - nginx
# the list can be used from the vars section as well
          
   loop: "{{ varlist }}"
===========================================================================================================================

Looping Over Inventory

# Ansible provides the ansible_batch_play and groups variables
# these allow easy traversal over inventory

- name: show all the hosts in the inventory
   debug:
    msg: "{{ item }}"
    loop: "{{ groups['all'] }}"
- name: show all the host in the current play
   debug:
    msg: "{{ item }}"
    loop: "{{ ansible_play_batch }}"
==============================================================================================================================




